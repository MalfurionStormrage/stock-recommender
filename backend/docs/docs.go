// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/stock": {
            "get": {
                "description": "Retorna todos los registros de la tabla stock",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Obtener todos los registros",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo registro en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Crear nuevo stock",
                "parameters": [
                    {
                        "description": "Datos del nuevo stock",
                        "name": "stock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockItemCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/stock/{id}": {
            "put": {
                "description": "Actualiza un registro de stock existente por ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Actualizar un registro existente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del stock a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del stock a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StockItemCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "ID inválido o JSON malformado",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al actualizar el stock",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un registro existente usando su ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Eliminar un registro de stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del stock a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al eliminar el stock",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stock/search": {
            "get": {
                "description": "Filtra los registros por ticker o next_page usando el query param \"filter\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Filtrar registros de stock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Valor a buscar en ticker o next_page",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje descriptivo del error",
                    "type": "string"
                },
                "status": {
                    "description": "Estado de la respuesta, normalmente \"error\"",
                    "type": "string"
                }
            }
        },
        "models.StockItemCreateRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "brokerage": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "next_page": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "rating_from": {
                    "type": "string"
                },
                "rating_to": {
                    "type": "string"
                },
                "target_from": {
                    "type": "string"
                },
                "target_to": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Datos retornados por la API"
                },
                "status": {
                    "description": "Estado de la respuesta, normalmente \"success\"",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Stock Recommender API",
	Description:      "API REST para manejar datos de stock",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
